# "First, solve the problem. Then, write the code. -John Johnson"
# "Or use Vangav M"
# www.vangav.com

# MIT License
#
# Copyright (c) 2016 Vangav
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

# Community
# Facebook Group: Vangav Open Source - Backend
#   fb.com/groups/575834775932682/
# Facebook Page: Vangav
#   fb.com/vangav.f
#
# Third party communities for Vangav Backend
#   - play framework
#   - cassandra
#   - datastax
#
# Tag your question online (e.g.: stack overflow, etc ...) with
#   #vangav_backend
#   to easier find questions/answers online

# @author mustapha
# fb.com/mustapha.abdallah

{
  "description": "used for storing Vangav's website analytics",
  "name": "v_analytics",
  "replications": [
    {
      "description": "used for dev environment",
      "name": "dev",
      "replication": "'class': 'SimpleStrategy', 'replication_factor' : 1"
    }
  ],
  "tables": [

    # [action] e.g.: page view, click, hover, download, etc ...
    #   action is a generic term for any Vangav service

    # daily_action_counters (year_month_day_action, action_count)
    # monthly_action_counters (year_month_action, action_count)
    # annual_action_counters (year_action, action_count)
    # total_action_counters (action, action_count)

    # daily_action_counters
    {
      "description": "stores daily count per action",
      "name": "daily_action_counters",
      "columns": [
        {
          "name": "year_month_day_action",
          "type": "varchar"
        },
        {
          "name": "action_count",
          "type": "counter"
        }
      ],
      "partition_keys": [
        "year_month_day_action"
      ],
      "secondary_keys": [
      ],
      "caching": "ALL",
      "order_by": [
      ],
      "queries": [
        {
          "description": "increments action_count",
          "name": "increment",
          "prepared_statement": "UPDATE v_analytics.daily_action_counters SET action_count = action_count + 1 WHERE year_month_day_action = :year_month_day_action;"
        },
        {
          "description": "selects action_count",
          "name": "select",
          "prepared_statement": "SELECT action_count FROM v_analytics.daily_action_counters WHERE year_month_day_action = :year_month_day_action;"
        }
      ]
    },

    # monthly_action_counters
    {
      "description": "stores monthly count per action",
      "name": "monthly_action_counters",
      "columns": [
        {
          "name": "year_month_action",
          "type": "varchar"
        },
        {
          "name": "action_count",
          "type": "counter"
        }
      ],
      "partition_keys": [
        "year_month_action"
      ],
      "secondary_keys": [
      ],
      "caching": "ALL",
      "order_by": [
      ],
      "queries": [
        {
          "description": "increments action_count",
          "name": "increment",
          "prepared_statement": "UPDATE v_analytics.monthly_action_counters SET action_count = action_count + 1 WHERE year_month_action = :year_month_action;"
        },
        {
          "description": "selects action_count",
          "name": "select",
          "prepared_statement": "SELECT action_count FROM v_analytics.monthly_action_counters WHERE year_month_action = :year_month_action;"
        }
      ]
    },

    # annual_action_counters
    {
      "description": "stores annual count per action",
      "name": "annual_action_counters",
      "columns": [
        {
          "name": "year_action",
          "type": "varchar"
        },
        {
          "name": "action_count",
          "type": "counter"
        }
      ],
      "partition_keys": [
        "year_action"
      ],
      "secondary_keys": [
      ],
      "caching": "ALL",
      "order_by": [
      ],
      "queries": [
        {
          "description": "increments action_count",
          "name": "increment",
          "prepared_statement": "UPDATE v_analytics.annual_action_counters SET action_count = action_count + 1 WHERE year_action = :year_action;"
        },
        {
          "description": "selects action_count",
          "name": "select",
          "prepared_statement": "SELECT action_count FROM v_analytics.annual_action_counters WHERE year_action = :year_action;"
        }
      ]
    },

    # total_action_counters
    {
      "description": "stores total count per action",
      "name": "total_action_counters",
      "columns": [
        {
          "name": "action",
          "type": "varchar"
        },
        {
          "name": "action_count",
          "type": "counter"
        }
      ],
      "partition_keys": [
        "action"
      ],
      "secondary_keys": [
      ],
      "caching": "ALL",
      "order_by": [
      ],
      "queries": [
        {
          "description": "increments action_count",
          "name": "increment",
          "prepared_statement": "UPDATE v_analytics.total_action_counters SET action_count = action_count + 1 WHERE action = :action;"
        },
        {
          "description": "selects action_count",
          "name": "select",
          "prepared_statement": "SELECT action_count FROM v_analytics.total_action_counters WHERE action = :action;"
        }
      ]
    }
    

  ]
}
